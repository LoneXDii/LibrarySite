version: "3.8"

volumes: 
  library_data:

networks:
  network-backend:

services:
  database:
    image: mysql:8.0.36
    restart: always
    volumes: 
      - library_data:/data/db
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment: 
      MYSQL_ROOT_PASSWORD: Root0++
      MYSQL_USER: user
      MYSQL_PASSWORD: Qwerty123
      MYSQL_DATABASE: librarydb
      MYSQL_DATABASE2: libraryidentitydb
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 15s
      retries: 5
    ports:
      - "3307:3306"
    networks: 
     - network-backend
  
  
  identity_api:
    build: ./LibraryIdentityServer
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "7002:7002"
    environment: 
      DBHOST: database
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:7002
      #ASPNETCORE_Kestrel__Certificates__Default__Path: /https/mycert.pfx
      #ASPNETCORE_Kestrel__Certificates__Default__Password: mypass
    healthcheck:
      test: ["CMD", "curl", "http://localhost:7002/.well-known/openid-configuration/jwks"]
      interval: 5s
      timeout: 10s
      retries: 3
    networks: 
     - network-backend

  api:
    build: ./LibraryServer
    depends_on:
      database:
        condition: service_healthy
      identity_api:
        condition: service_healthy
    ports:
      - "7001:7001"
    environment: 
      DBHOST: database
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:7001
      #ASPNETCORE_Kestrel__Certificates__Default__Path: /https/mycert.pfx
      #ASPNETCORE_Kestrel__Certificates__Default__Password: mypass 
    networks: 
     - network-backend