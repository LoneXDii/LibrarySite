version: "3.8"

volumes: 
  library_data:
  azurite_data:

networks:
  network-backend:

services:
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:latest
    volumes:
      - azurite_data:/data
    ports:
      - "10000:10000"
    networks: 
     - network-backend

  database:
    image: mysql:8.0.36
    restart: always
    depends_on:
     - azurite
    volumes: 
      - library_data:/data/db
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment: 
      MYSQL_ROOT_PASSWORD: Root0++
      MYSQL_USER: user
      MYSQL_PASSWORD: Qwerty123
      MYSQL_DATABASE: librarydb
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 15s
      retries: 5
    ports:
      - "3307:3306"
    networks: 
     - network-backend
  
  identity_api:
    build: ./LibraryIdentityServer
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "7002:7002"
    environment: 
      DBHOST: database
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:7002
      ISSUER_BASE: http://identity_api:7002
    healthcheck:
      test: ["CMD", "curl", "http://localhost:7002/.well-known/openid-configuration/jwks"]
      interval: 5s
      timeout: 10s
      retries: 3
    networks: 
     - network-backend

  api:
    build: ./LibraryServer
    depends_on:
      database:
        condition: service_healthy
      identity_api:
        condition: service_healthy
    ports:
      - "7001:7001"
    environment: 
      DBHOST: database
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:7001
      IDENTITY_BASE: http://identity_api:7002
      AZURE_CONNECTION: UseDevelopmentStorage=true;DevelopmentStorageProxyUri=http://azurite;
    networks: 
     - network-backend